service: dono-service

useDotenv: true
plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-prune-plugin
  - serverless-plugin-log-retention

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  httpApi:
    cors: true
    authorizers:
      twitchAuthenticator:
        type: request
        functionArn: arn:aws:lambda:us-east-1:796987500533:function:hoagietools-service-prod-twitchAuthenticator
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:Query'
        - 'dynamodb:Scan'
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:DeleteItem'
      Resource: "*"
  logRetentionInDays: 30 # used to set a global value for all functions

custom:
  prune:
    automatic: false
    number: 1
  myStage: ${opt:stage, 'dev'}
  #myTableName: HoagieTools-${opt:stage, self:provider.stage}
  myTableName: HoagieTools-prod
  domainName:
    development: dono-dev.hoagieman.net
    prod: dono.hoagieman.net

functions:
  getdono:
    handler: handlers.getdono
    events:
      - httpApi:
          method: GET
          path: /api/v1/{streamerName}
          authorizer: twitchAuthenticator
    environment:
      STAGE: ${self:custom.myStage}
      TABLENAME: ${self:custom.myTableName}

  twitchchatevents:
    handler: handlers.twitchchatevents
    events:
      - eventBridge:
          pattern:
            source:
              - 'hoagie.twitch-chat'
    environment:
      STAGE: ${self:custom.myStage}
      TABLENAME: ${self:custom.myTableName}

resources: ${file(../../libs/api-util/src/lib/serverless/serviceCloudfront.yml):resources}
