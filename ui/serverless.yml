service: hoagietools-service

plugins:
  - serverless-api-cloudfront
  - serverless-offline
  - serverless-s3-sync
frameworkVersion: '2'

custom:
  siteName: hoagietools.hoagieman.net
  hostedZoneName: hoagieman.net
  aliasHostedZoneId: Z3AQBSTGFYJSTF    # us-east-1
  aliasDNSName: s3-website-us-east-1.amazonaws.com
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: ./build
  myStage: ${opt:stage, self:provider.stage}
  apiCloudFront:
    domain: hoagietools.hoagieman.net
    certificate: arn:aws:acm:us-east-1:796987500533:certificate/34ddd63f-ae46-4812-a2ee-39b9594d8ef2
    compress: true
    headers:
      - Origin
      - Authorization
      - Access-Control-Request-Method
      - Access-Control-Allow-Origin
      - Access-Control-Request-Headers
      - Access-Control-Allow-Credentials
    # Unfortunately, the DefaultTTL must be set manually

provider:
  name: aws
  runtime: nodejs14.x
  httpApi:
    cors: true

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]

    DnsRecord:
      Type: "AWS::Route53::RecordSet"
      Properties:
        AliasTarget:
          DNSName: ${self:custom.aliasDNSName}
          HostedZoneId: ${self:custom.aliasHostedZoneId}
        HostedZoneName: ${self:custom.hostedZoneName}.
        Name:
          Ref: StaticSite
        Type: 'A'
#    StreamerMusicQueueTable:
#      Type: 'AWS::DynamoDB::Table'
#      DeletionPolicy: Retain
#      Properties:
#        AttributeDefinitions:
#          - AttributeName: CategoryKey
#            AttributeType: S
#          - AttributeName: SubKey
#            AttributeType: S
#        KeySchema:
#          - AttributeName: CategoryKey
#            KeyType: HASH
#          - AttributeName: SubKey
#            KeyType: RANGE
#        ProvisionedThroughput:
#          ReadCapacityUnits: 1
#          WriteCapacityUnits: 1
#        TableName: ${self:custom.myTableName}